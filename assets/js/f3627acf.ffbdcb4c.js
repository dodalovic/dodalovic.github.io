"use strict";(self.webpackChunkdodalovic_github_io=self.webpackChunkdodalovic_github_io||[]).push([[3202],{3905:(e,t,o)=>{o.d(t,{Zo:()=>m,kt:()=>g});var n=o(7294);function i(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function a(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function r(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?a(Object(o),!0).forEach((function(t){i(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):a(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,i=function(e,t){if(null==e)return{};var o,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||(i[o]=e[o]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)o=a[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(i[o]=e[o])}return i}var c=n.createContext({}),s=function(e){var t=n.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):r(r({},t),e)),o},m=function(e){var t=s(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var o=e.components,i=e.mdxType,a=e.originalType,c=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),p=s(o),d=i,g=p["".concat(c,".").concat(d)]||p[d]||u[d]||a;return o?n.createElement(g,r(r({ref:t},m),{},{components:o})):n.createElement(g,r({ref:t},m))}));function g(e,t){var o=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=o.length,r=new Array(a);r[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l[p]="string"==typeof e?e:i,r[1]=l;for(var s=2;s<a;s++)r[s]=o[s];return n.createElement.apply(null,r)}return n.createElement.apply(null,o)}d.displayName="MDXCreateElement"},5190:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var n=o(7462),i=(o(7294),o(3905));const a={title:"Sending mail via GMail using Kotlin and commons-mail library",authors:["dodalovic"],tags:["technology","gmail","kotlin","open-source"]},r=void 0,l={permalink:"/dodalovic.github.io/blog/sending-mail-via-gmail-using-kotlin-and-commons-mail-library",editUrl:"https://github.com/dodalovic/dodalovic.github.io/tree/main/blog/sending-mail-via-gmail-using-kotlin-and-commons-mail-library/index.mdx",source:"@site/blog/sending-mail-via-gmail-using-kotlin-and-commons-mail-library/index.mdx",title:"Sending mail via GMail using Kotlin and commons-mail library",description:"Continuing series of blog posts related to Kotlin, today we\u2019ll together make a sample application showing us how we could automate",date:"2023-03-26T11:48:57.000Z",formattedDate:"March 26, 2023",tags:[{label:"technology",permalink:"/dodalovic.github.io/blog/tags/technology"},{label:"gmail",permalink:"/dodalovic.github.io/blog/tags/gmail"},{label:"kotlin",permalink:"/dodalovic.github.io/blog/tags/kotlin"},{label:"open-source",permalink:"/dodalovic.github.io/blog/tags/open-source"}],readingTime:1.65,hasTruncateMarker:!0,authors:[{name:"Dusan Odalovic",url:"https://github.com/dodalovic",imageURL:"https://github.com/dodalovic.png",key:"dodalovic"}],frontMatter:{title:"Sending mail via GMail using Kotlin and commons-mail library",authors:["dodalovic"],tags:["technology","gmail","kotlin","open-source"]},prevItem:{title:"Querying Mongodb documents for array properties",permalink:"/dodalovic.github.io/blog/querying-mongo-documents-for-array-properties"},nextItem:{title:"Software development vocabulary for the newcomers",permalink:"/dodalovic.github.io/blog/shared-libraries-in-distributed-systems"}},c={authorsImageUrls:[void 0]},s=[],m={toc:s},p="wrapper";function u(e){let{components:t,...o}=e;return(0,i.kt)(p,(0,n.Z)({},m,o,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Continuing series of blog posts related to ",(0,i.kt)("inlineCode",{parentName:"p"},"Kotlin"),", today we\u2019ll together make a sample application showing us how we could automate\nemail sending \u2013 using ",(0,i.kt)("inlineCode",{parentName:"p"},"Kotlin")," programming language. Example is quite simple, and surely \u2013 you can enhance it with own features. Application\nmostly demonstrates compact ",(0,i.kt)("inlineCode",{parentName:"p"},"Kotlin")," syntax, as well as full compatibility with Java or 3rd party libraries (in this case Apache ",(0,i.kt)("inlineCode",{parentName:"p"},"commons-mail")," library)."))}u.isMDXComponent=!0}}]);