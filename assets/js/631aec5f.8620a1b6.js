"use strict";(self.webpackChunkdodalovic_github_io=self.webpackChunkdodalovic_github_io||[]).push([[2589],{3905:(e,t,o)=>{o.d(t,{Zo:()=>p,kt:()=>g});var n=o(7294);function r(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function i(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?i(Object(o),!0).forEach((function(t){r(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function l(e,t){if(null==e)return{};var o,n,r=function(e,t){if(null==e)return{};var o,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||(r[o]=e[o]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)o=i[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(r[o]=e[o])}return r}var s=n.createContext({}),c=function(e){var t=n.useContext(s),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var o=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),m=c(o),u=r,g=m["".concat(s,".").concat(u)]||m[u]||d[u]||i;return o?n.createElement(g,a(a({ref:t},p),{},{components:o})):n.createElement(g,a({ref:t},p))}));function g(e,t){var o=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=o.length,a=new Array(i);a[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,a[1]=l;for(var c=2;c<i;c++)a[c]=o[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},6369:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=o(7462),r=(o(7294),o(3905));const i={title:"Microservices with Spring Boot, Netflix Zuul, Kotlin, Docker and MongoDB",authors:["dodalovic"],tags:["technology","spring-boot","kotlin","docker","mongodb","microservices"]},a=void 0,l={permalink:"/blog/microservices-with-spring-boot-netflix-zuul-kotlin-docker-and-mongodb",editUrl:"https://github.com/dodalovic/dodalovic.github.io/tree/main/blog/microservices-with-spring-boot-netflix-zuul-kotlin-docker-and-mongodb/index.mdx",source:"@site/blog/microservices-with-spring-boot-netflix-zuul-kotlin-docker-and-mongodb/index.mdx",title:"Microservices with Spring Boot, Netflix Zuul, Kotlin, Docker and MongoDB",description:"Recently I've started playing with Kotlin programming language, and wanted to give it a try. Kotlin gives us possibility to write quite concise code.",date:"2023-03-27T06:23:26.000Z",formattedDate:"March 27, 2023",tags:[{label:"technology",permalink:"/blog/tags/technology"},{label:"spring-boot",permalink:"/blog/tags/spring-boot"},{label:"kotlin",permalink:"/blog/tags/kotlin"},{label:"docker",permalink:"/blog/tags/docker"},{label:"mongodb",permalink:"/blog/tags/mongodb"},{label:"microservices",permalink:"/blog/tags/microservices"}],readingTime:1.4384615384615385,hasTruncateMarker:!0,authors:[{name:"Dusan Odalovic",url:"https://github.com/dodalovic",imageURL:"https://github.com/dodalovic.png",key:"dodalovic"}],frontMatter:{title:"Microservices with Spring Boot, Netflix Zuul, Kotlin, Docker and MongoDB",authors:["dodalovic"],tags:["technology","spring-boot","kotlin","docker","mongodb","microservices"]},prevItem:{title:"Make your first days as developer easier",permalink:"/blog/make-your-first-days-as-developer-easier"},nextItem:{title:"Mocking same method multiple times using Mockito? Can't be easier than that!",permalink:"/blog/mocking-same-method-multiple-times-using-mockito"}},s={authorsImageUrls:[void 0]},c=[],p={toc:c},m="wrapper";function d(e){let{components:t,...o}=e;return(0,r.kt)(m,(0,n.Z)({},p,o,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Recently I've started playing with Kotlin programming language, and wanted to give it a try. Kotlin gives us possibility to write quite concise code."),(0,r.kt)("p",null,"I've built sample, small micro-service, composed of some kind of simple ",(0,r.kt)("inlineCode",{parentName:"p"},"api-gateway")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"proxy")," server, implemented using ",(0,r.kt)("inlineCode",{parentName:"p"},"Spring Boot")," and ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Netflix/zuul"},"Netflix Zuul"),"\nlibrary for proxying requests to downstream servers."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"api-gateway")," which is public facing proxy server doesn't do more than just forwarding request to downstream ",(0,r.kt)("inlineCode",{parentName:"p"},"user-service micro-service"),"."),(0,r.kt)("p",null,"User service is implemented in ",(0,r.kt)("inlineCode",{parentName:"p"},"Spring Boot"),", using ",(0,r.kt)("inlineCode",{parentName:"p"},"Kotlin")," as a language of choice, having ",(0,r.kt)("inlineCode",{parentName:"p"},"MongoDB")," as persistent storage. It has only two ",(0,r.kt)("inlineCode",{parentName:"p"},"APIs")," - ",(0,r.kt)("strong",{parentName:"p"},"create user")," and ",(0,r.kt)("strong",{parentName:"p"},"retrieve user"),".\nI'm using command line to test these ",(0,r.kt)("inlineCode",{parentName:"p"},"APIs"),". Idea is to call ",(0,r.kt)("inlineCode",{parentName:"p"},"api-gateway")," that just downstream request to ",(0,r.kt)("inlineCode",{parentName:"p"},"user-service"),". This kind\nof simulates some real-life scenarios of how you might organize your service oriented architectures."),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose")," comes quite handy to start / shutdown all the services with simple commands and orchestrate them via ",(0,r.kt)("inlineCode",{parentName:"p"},"docker-compose.yaml")," configuration file."),(0,r.kt)("p",null,"You can find and download source code from ",(0,r.kt)("u",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/dodalovic/kotlin-microservices"},"GitHub")),". Readme file there explains how to start & use services."),(0,r.kt)("p",null,"That was all for today! Hope you liked it!"))}d.isMDXComponent=!0}}]);