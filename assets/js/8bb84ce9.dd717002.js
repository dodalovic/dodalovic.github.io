"use strict";(self.webpackChunkdodalovic_github_io=self.webpackChunkdodalovic_github_io||[]).push([[6380],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>g});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function a(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?a(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):a(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},a=Object.keys(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)r=a[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=o.createContext({}),s=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,a=e.originalType,l=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),p=s(r),u=n,g=p["".concat(l,".").concat(u)]||p[u]||d[u]||a;return r?o.createElement(g,i(i({ref:t},m),{},{components:r})):o.createElement(g,i({ref:t},m))}));function g(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var a=r.length,i=new Array(a);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[p]="string"==typeof e?e:n,i[1]=c;for(var s=2;s<a;s++)i[s]=r[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}u.displayName="MDXCreateElement"},2705:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var o=r(7462),n=(r(7294),r(3905));const a={title:"Standardizing micro-service frameworks across development teams",authors:["dodalovic"],tags:["technology"]},i=void 0,c={permalink:"/dodalovic.github.io/blog/standardizing-micro-service-frameworks-across-development-teams",editUrl:"https://github.com/dodalovic/dodalovic.github.io/tree/main/blog/standardizing-micro-service-frameworks-across-development-teams/index.mdx",source:"@site/blog/standardizing-micro-service-frameworks-across-development-teams/index.mdx",title:"Standardizing micro-service frameworks across development teams",description:"Let\u2019s think of an imaginary company that has a product, built as a software monolith. This is not hard to imagine, right?",date:"2023-03-26T11:48:57.000Z",formattedDate:"March 26, 2023",tags:[{label:"technology",permalink:"/dodalovic.github.io/blog/tags/technology"}],readingTime:8.05,hasTruncateMarker:!0,authors:[{name:"Dusan Odalovic",url:"https://github.com/dodalovic",imageURL:"https://github.com/dodalovic.png",key:"dodalovic"}],frontMatter:{title:"Standardizing micro-service frameworks across development teams",authors:["dodalovic"],tags:["technology"]},prevItem:{title:"Spring MVC JUnit testing",permalink:"/dodalovic.github.io/blog/spring-mvc-junit-testing"},nextItem:{title:"Zero boilerplate implementing state pattern in kotlin",permalink:"/dodalovic.github.io/blog/state-pattern-in-kotlin"}},l={authorsImageUrls:[void 0]},s=[],m={toc:s},p="wrapper";function d(e){let{components:t,...r}=e;return(0,n.kt)(p,(0,o.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"Let\u2019s think of an imaginary company that has a product, built as a software monolith. This is not hard to imagine, right?"),(0,n.kt)("p",null,"So, now let\u2019s imagine a situation where the time comes for the company to slice the product technically, into a set of independent services."),(0,n.kt)("p",null,"The reason may be that codebase becomes hard to manage due to too big complexity, technical debts, or different scalability required for some parts of the application."))}d.isMDXComponent=!0}}]);