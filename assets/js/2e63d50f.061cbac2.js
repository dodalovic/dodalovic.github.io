"use strict";(self.webpackChunkdodalovic_github_io=self.webpackChunkdodalovic_github_io||[]).push([[5077],{3905:(t,e,o)=>{o.d(e,{Zo:()=>u,kt:()=>g});var n=o(7294);function r(t,e,o){return e in t?Object.defineProperty(t,e,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[e]=o,t}function i(t,e){var o=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),o.push.apply(o,n)}return o}function a(t){for(var e=1;e<arguments.length;e++){var o=null!=arguments[e]?arguments[e]:{};e%2?i(Object(o),!0).forEach((function(e){r(t,e,o[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(o)):i(Object(o)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(o,e))}))}return t}function l(t,e){if(null==t)return{};var o,n,r=function(t,e){if(null==t)return{};var o,n,r={},i=Object.keys(t);for(n=0;n<i.length;n++)o=i[n],e.indexOf(o)>=0||(r[o]=t[o]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)o=i[n],e.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(t,o)&&(r[o]=t[o])}return r}var c=n.createContext({}),s=function(t){var e=n.useContext(c),o=e;return t&&(o="function"==typeof t?t(e):a(a({},e),t)),o},u=function(t){var e=s(t.components);return n.createElement(c.Provider,{value:e},t.children)},p="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},f=n.forwardRef((function(t,e){var o=t.components,r=t.mdxType,i=t.originalType,c=t.parentName,u=l(t,["components","mdxType","originalType","parentName"]),p=s(o),f=r,g=p["".concat(c,".").concat(f)]||p[f]||d[f]||i;return o?n.createElement(g,a(a({ref:e},u),{},{components:o})):n.createElement(g,a({ref:e},u))}));function g(t,e){var o=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=o.length,a=new Array(i);a[0]=f;var l={};for(var c in e)hasOwnProperty.call(e,c)&&(l[c]=e[c]);l.originalType=t,l[p]="string"==typeof t?t:r,a[1]=l;for(var s=2;s<i;s++)a[s]=o[s];return n.createElement.apply(null,a)}return n.createElement.apply(null,o)}f.displayName="MDXCreateElement"},2797:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>s});var n=o(7462),r=(o(7294),o(3905));const i={title:"Constructors in Kotlin",authors:["dodalovic"],tags:["technology","kotlin"]},a=void 0,l={permalink:"/dodalovic.github.io/blog/constructors-in-kotlin",editUrl:"https://github.com/dodalovic/dodalovic.github.io/tree/main/blog/constructors-in-kotlin/index.mdx",source:"@site/blog/constructors-in-kotlin/index.mdx",title:"Constructors in Kotlin",description:"Constructors are regular functions that give a chance to developer to initialise state of class instance.",date:"2023-03-26T11:48:57.000Z",formattedDate:"March 26, 2023",tags:[{label:"technology",permalink:"/dodalovic.github.io/blog/tags/technology"},{label:"kotlin",permalink:"/dodalovic.github.io/blog/tags/kotlin"}],readingTime:2.13,hasTruncateMarker:!0,authors:[{name:"Dusan Odalovic",url:"https://github.com/dodalovic",imageURL:"https://github.com/dodalovic.png",key:"dodalovic"}],frontMatter:{title:"Constructors in Kotlin",authors:["dodalovic"],tags:["technology","kotlin"]},prevItem:{title:"Avoid NullPointerException - use Java 8 Optional",permalink:"/dodalovic.github.io/blog/avoid-nullpointerexception-use-java-8-optional"},nextItem:{title:"Impact of decisions at software companies",permalink:"/dodalovic.github.io/blog/decisions-impact-at-software-companies"}},c={authorsImageUrls:[void 0]},s=[],u={toc:s},p="wrapper";function d(t){let{components:e,...o}=t;return(0,r.kt)(p,(0,n.Z)({},u,o,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Constructors are regular functions that give a chance to developer to initialise state of class instance.\nThey are completely optional, and it's perfectly valid to have this, although not so useful \ud83d\ude03"))}d.isMDXComponent=!0}}]);